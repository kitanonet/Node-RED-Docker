[
    {
        "id": "4fd2461a.293ca8",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4d46ae33.cc774",
        "type": "tab",
        "label": "OPC Server",
        "disabled": false,
        "info": ""
    },
    {
        "id": "dcc7185c.306288",
        "type": "tab",
        "label": "Web Socket",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b6a3f7dd.4c1438",
        "type": "tab",
        "label": "PalletIn",
        "disabled": false,
        "info": ""
    },
    {
        "id": "70830d1f.3a8654",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ab20bea.b11ee4",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://localhost:4840/UA/NoderedServer",
        "secpol": "None",
        "secmode": "None",
        "login": false
    },
    {
        "id": "4dbac78b.892958",
        "type": "websocket-listener",
        "path": "/ws/receiveMessage",
        "wholemsg": "false"
    },
    {
        "id": "d85be333.4917e",
        "type": "websocket-listener",
        "path": "/ws/publishMessage",
        "wholemsg": "false"
    },
    {
        "id": "7290d8b0.f713d8",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://localhost:62544/Quickstarts/AlarmConditionServer",
        "login": false
    },
    {
        "id": "534e10d9.ea788",
        "type": "collect-variables",
        "z": "4d46ae33.cc774",
        "varfile": "${VARFILE}",
        "typedInputJSON": "{\"\\\"DB_OP010A_MES_Interface_1\\\"\":{\"\\\"MES_MES_TO_PLC_Key_PartNumber\\\"\":{\"\\\"Part17\\\"\":{\"name\":\"\\\"Part17\\\"\",\"type\":\"String\",\"value\":\"\"},\"\\\"Part18\\\"\":{\"name\":\"\\\"Part18\\\"\",\"type\":\"String\",\"value\":\"\"},\"\\\"Part19\\\"\":{\"name\":\"\\\"Part19\\\"\",\"type\":\"String\",\"value\":\"\"}}}}",
        "x": 410,
        "y": 100,
        "wires": [
            [
                "6cb18d45.e05db4",
                "aea4dd3b.04251"
            ],
            [
                "a03e4759.728da8",
                "d7a08ce8.7145b"
            ]
        ]
    },
    {
        "id": "60b3b0fe.154e5",
        "type": "http in",
        "z": "4d46ae33.cc774",
        "name": "http GET /getVariables",
        "url": "/getVariables",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 140,
        "wires": [
            [
                "534e10d9.ea788"
            ]
        ]
    },
    {
        "id": "aea4dd3b.04251",
        "type": "debug",
        "z": "4d46ae33.cc774",
        "name": "collect-variables msg1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 180,
        "wires": []
    },
    {
        "id": "6cb18d45.e05db4",
        "type": "http response",
        "z": "4d46ae33.cc774",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 140,
        "wires": []
    },
    {
        "id": "c57242d9.62546",
        "type": "link in",
        "z": "4d46ae33.cc774",
        "name": "OpcUA server IN",
        "links": [
            "d7a08ce8.7145b",
            "c1869c10.ec6b6",
            "271e85bd.51c64a",
            "fcd20c40.50885",
            "a7fc1dae.a9f2b",
            "2c8529d8.cda556"
        ],
        "x": 145,
        "y": 300,
        "wires": [
            [
                "78930620.4ba158",
                "872981e1.978c1"
            ]
        ]
    },
    {
        "id": "b2036564.90bbb8",
        "type": "link out",
        "z": "4d46ae33.cc774",
        "name": "OpcUA server OUT",
        "links": [
            "dcaf8757.0e1d38"
        ],
        "x": 505,
        "y": 300,
        "wires": []
    },
    {
        "id": "78930620.4ba158",
        "type": "debug",
        "z": "4d46ae33.cc774",
        "name": "OpcUA server IN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 360,
        "wires": []
    },
    {
        "id": "db17a823.344468",
        "type": "debug",
        "z": "4d46ae33.cc774",
        "name": "OpcUA server OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 360,
        "wires": []
    },
    {
        "id": "d7a08ce8.7145b",
        "type": "link out",
        "z": "4d46ae33.cc774",
        "name": "",
        "links": [
            "c57242d9.62546"
        ],
        "x": 635,
        "y": 260,
        "wires": []
    },
    {
        "id": "a03e4759.728da8",
        "type": "debug",
        "z": "4d46ae33.cc774",
        "name": "collect-variables msg2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 220,
        "wires": []
    },
    {
        "id": "82a13bea.fcf638",
        "type": "OpcUa-Item",
        "z": "4d46ae33.cc774",
        "item": "ns=3;\"DB_030Slot1_MES_Interface\".\"MES_MES_TO_PLC_INTERFACE\".\"AllowStationStart\"",
        "datatype": "String",
        "value": "",
        "name": "",
        "x": 380,
        "y": 520,
        "wires": [
            [
                "118b1c9f.c62c73"
            ]
        ]
    },
    {
        "id": "dc41d3fd.e13a7",
        "type": "inject",
        "z": "4d46ae33.cc774",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 190,
        "y": 520,
        "wires": [
            [
                "82a13bea.fcf638",
                "79440f69.a409c"
            ]
        ]
    },
    {
        "id": "118b1c9f.c62c73",
        "type": "debug",
        "z": "4d46ae33.cc774",
        "name": "OPC UA Item OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 520,
        "wires": []
    },
    {
        "id": "79440f69.a409c",
        "type": "function",
        "z": "4d46ae33.cc774",
        "name": "",
        "func": "msg.payload= false\nmsg.topic='ns=3;s=\"DB_180MES_Interface\".\"MES_PLC_TO_MES_TASK_Data\".\"Task1\".\"Finished\"'\nmsg.datatype= \"Boolean\"\nmsg.browseName= \"\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 580,
        "wires": [
            [
                "4747ba6a.532044",
                "aceb8c4.f86fd7"
            ]
        ]
    },
    {
        "id": "aceb8c4.f86fd7",
        "type": "OpcUa-Client",
        "z": "4d46ae33.cc774",
        "endpoint": "ab20bea.b11ee4",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "name": "Client WRITE",
        "x": 580,
        "y": 580,
        "wires": [
            [
                "6890a64a.ca73b8"
            ]
        ]
    },
    {
        "id": "4747ba6a.532044",
        "type": "debug",
        "z": "4d46ae33.cc774",
        "name": "custom OPC UA Item OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 640,
        "wires": []
    },
    {
        "id": "6890a64a.ca73b8",
        "type": "debug",
        "z": "4d46ae33.cc774",
        "name": "OPC UA Client OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 580,
        "wires": []
    },
    {
        "id": "fba95da9.01039",
        "type": "OpcUa-Client",
        "z": "4d46ae33.cc774",
        "endpoint": "ab20bea.b11ee4",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "name": "Client READ",
        "x": 510,
        "y": 780,
        "wires": [
            [
                "5af6ffe6.aadf4",
                "82822d7e.7c74a"
            ]
        ]
    },
    {
        "id": "525d1d83.770264",
        "type": "inject",
        "z": "4d46ae33.cc774",
        "name": "nodeId",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "ns=3;s=\"DB_180MES_Interface\".\"MES_PLC_TO_MES_TASK_Data\".\"Task1\".\"Finished\"",
        "x": 270,
        "y": 780,
        "wires": [
            [
                "fba95da9.01039"
            ]
        ]
    },
    {
        "id": "5af6ffe6.aadf4",
        "type": "debug",
        "z": "4d46ae33.cc774",
        "name": "Client READ OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 780,
        "wires": []
    },
    {
        "id": "650274db.ee237c",
        "type": "OpcUa-Client",
        "z": "4d46ae33.cc774",
        "endpoint": "ab20bea.b11ee4",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "name": "Client WRITE",
        "x": 520,
        "y": 920,
        "wires": [
            [
                "4272c23d.ffa64c",
                "3759993e.b22ed6"
            ]
        ]
    },
    {
        "id": "39d1940d.10300c",
        "type": "inject",
        "z": "4d46ae33.cc774",
        "name": "set nodeId value to FALSE",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            },
            {
                "p": "datatype",
                "v": "Boolean",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "ns=3;s=\"DB_180MES_Interface\".\"MES_PLC_TO_MES_TASK_Data\".\"Task1\".\"Finished\"",
        "payload": "false",
        "payloadType": "str",
        "x": 250,
        "y": 920,
        "wires": [
            [
                "650274db.ee237c"
            ]
        ]
    },
    {
        "id": "4272c23d.ffa64c",
        "type": "debug",
        "z": "4d46ae33.cc774",
        "name": "Client WRITE OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 920,
        "wires": []
    },
    {
        "id": "8ba2c3e0.77ad6",
        "type": "inject",
        "z": "4d46ae33.cc774",
        "name": "set Variable value (JSON Inject wrong variableName)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"messageType\":\"Variable\",\"variableName\":\"ns=3:s=\\\"DB_180MES_Interface\\\".\\\"MES_PLC_TO_MES_TASK_Data\\\".\\\"Task1\\\".\\\"Finished\\\"\",\"variableValue\":false}",
        "payloadType": "json",
        "x": 330,
        "y": 1160,
        "wires": [
            [
                "c1869c10.ec6b6",
                "37904cfc.30dc04"
            ]
        ]
    },
    {
        "id": "c1869c10.ec6b6",
        "type": "link out",
        "z": "4d46ae33.cc774",
        "name": "",
        "links": [
            "c57242d9.62546"
        ],
        "x": 835,
        "y": 1100,
        "wires": []
    },
    {
        "id": "37904cfc.30dc04",
        "type": "debug",
        "z": "4d46ae33.cc774",
        "name": "set Variable value OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 1160,
        "wires": []
    },
    {
        "id": "f6c31601.b4b8b8",
        "type": "inject",
        "z": "4d46ae33.cc774",
        "name": "addVariable",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "ns=3;s=\"DB_180MES_Interface\".\"MES_PLC_TO_MES_TASK_Data\".\"Task1\".\"Finished\";datatype=Boolean",
        "payload": "{\"opcuaCommand\":\"addVariable\"}",
        "payloadType": "json",
        "x": 210,
        "y": 1100,
        "wires": [
            [
                "c1869c10.ec6b6"
            ]
        ]
    },
    {
        "id": "a940c8d0.7ea4a8",
        "type": "inject",
        "z": "4d46ae33.cc774",
        "name": "set nodeId value to TRUE",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            },
            {
                "p": "datatype",
                "v": "Boolean",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "ns=3;s=\"DB_180MES_Interface\".\"MES_PLC_TO_MES_TASK_Data\".\"Task1\".\"Finished\"",
        "payload": "true",
        "payloadType": "str",
        "x": 250,
        "y": 960,
        "wires": [
            [
                "650274db.ee237c"
            ]
        ]
    },
    {
        "id": "a21ea9fb.9892d8",
        "type": "inject",
        "z": "4d46ae33.cc774",
        "name": "set Variable value (JSON Inject working variableName)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"messageType\":\"Variable\",\"variableName\":\"3:\\\"DB_180MES_Interface\\\".\\\"MES_PLC_TO_MES_TASK_Data\\\".\\\"Task1\\\".\\\"Finished\\\"\",\"variableValue\":true}",
        "payloadType": "json",
        "x": 340,
        "y": 1240,
        "wires": [
            [
                "c1869c10.ec6b6",
                "37904cfc.30dc04"
            ]
        ]
    },
    {
        "id": "684770c6.c9e16",
        "type": "link in",
        "z": "4d46ae33.cc774",
        "name": "OPC Client WRITE input",
        "links": [
            "483cc2.4da5a34",
            "78c803fd.7f901c",
            "4a1c4cef.374e24"
        ],
        "x": 235,
        "y": 860,
        "wires": [
            [
                "650274db.ee237c",
                "a570608b.cf748"
            ]
        ]
    },
    {
        "id": "eef31c49.664d6",
        "type": "inject",
        "z": "4d46ae33.cc774",
        "name": "set nodeId Int16 value to 111",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            },
            {
                "p": "datatype",
                "v": "Int16",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "ns=3;s=\"DB_180MES_Interface\".\"MES_PLC_TO_MES_INTERFACE\".\"PalletNm\"",
        "payload": "111",
        "payloadType": "str",
        "x": 260,
        "y": 1420,
        "wires": [
            [
                "78c803fd.7f901c"
            ]
        ]
    },
    {
        "id": "78c803fd.7f901c",
        "type": "link out",
        "z": "4d46ae33.cc774",
        "name": "",
        "links": [
            "684770c6.c9e16"
        ],
        "x": 455,
        "y": 1420,
        "wires": []
    },
    {
        "id": "1c153515.40ae0b",
        "type": "select-variables",
        "z": "4d46ae33.cc774",
        "select": "11",
        "select2": "2",
        "editableList": {
            "db": "\"DB_OP015A_MES_Interface_1\"",
            "struct": "\"MES_MES_TO_PLC_INTERFACE\"",
            "rules": {
                "\"MES_Save_Key_Data\"": {
                    "action": "WRITE",
                    "type": "Boolean",
                    "value": "true"
                },
                "\"MES_Save_QC_Data\"": {
                    "action": "SET",
                    "type": "Boolean",
                    "value": "false"
                },
                "\"TransType\"": {
                    "action": "READ",
                    "type": "Boolean",
                    "value": "false"
                }
            }
        },
        "typedInputJSON": "{\"\\\"MES_Save_Key_Data\\\"\":{\"action\":\"WRITE\",\"type\":\"Boolean\",\"value\":\"true\"},\"\\\"MES_Save_QC_Data\\\"\":{\"action\":\"SET\",\"type\":\"Boolean\",\"value\":\"false\"},\"\\\"TransType\\\"\":{\"action\":\"READ\",\"type\":\"Boolean\",\"value\":\"false\"}}",
        "orderedList": "",
        "x": 450,
        "y": 1540,
        "wires": [
            [
                "c58bf5b5.832fb8",
                "f96ab782.398448"
            ],
            [
                "a1f791e4.6bd3a",
                "483cc2.4da5a34"
            ],
            [
                "99844dfc.56b32",
                "271e85bd.51c64a"
            ],
            []
        ]
    },
    {
        "id": "89550fdb.86c1a",
        "type": "inject",
        "z": "4d46ae33.cc774",
        "name": "set Variable value (JSON Inject wrong variableName)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"messageType\":\"Variable\",\"variableName\":\"\\\"DB_180MES_Interface\\\".\\\"MES_PLC_TO_MES_TASK_Data\\\".\\\"Task1\\\".\\\"Finished\\\"\",\"variableValue\":false}",
        "payloadType": "json",
        "x": 330,
        "y": 1200,
        "wires": [
            [
                "c1869c10.ec6b6",
                "37904cfc.30dc04"
            ]
        ]
    },
    {
        "id": "967aa806.df35e8",
        "type": "inject",
        "z": "4d46ae33.cc774",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1540,
        "wires": [
            [
                "1c153515.40ae0b"
            ]
        ]
    },
    {
        "id": "c58bf5b5.832fb8",
        "type": "debug",
        "z": "4d46ae33.cc774",
        "name": "Client READ msg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 1500,
        "wires": []
    },
    {
        "id": "a1f791e4.6bd3a",
        "type": "debug",
        "z": "4d46ae33.cc774",
        "name": "Client WRITE msg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 1540,
        "wires": []
    },
    {
        "id": "99844dfc.56b32",
        "type": "debug",
        "z": "4d46ae33.cc774",
        "name": "Server SET Variable msg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 1580,
        "wires": []
    },
    {
        "id": "f96ab782.398448",
        "type": "link out",
        "z": "4d46ae33.cc774",
        "name": "",
        "links": [
            "a855491e.5f7238"
        ],
        "x": 635,
        "y": 1480,
        "wires": []
    },
    {
        "id": "483cc2.4da5a34",
        "type": "link out",
        "z": "4d46ae33.cc774",
        "name": "",
        "links": [
            "684770c6.c9e16"
        ],
        "x": 655,
        "y": 1540,
        "wires": []
    },
    {
        "id": "271e85bd.51c64a",
        "type": "link out",
        "z": "4d46ae33.cc774",
        "name": "",
        "links": [
            "c57242d9.62546"
        ],
        "x": 635,
        "y": 1600,
        "wires": []
    },
    {
        "id": "a855491e.5f7238",
        "type": "link in",
        "z": "4d46ae33.cc774",
        "name": "OPC Client READ input",
        "links": [
            "4438f101.f5dc8",
            "88fc28cf.0aebf8",
            "f96ab782.398448"
        ],
        "x": 235,
        "y": 720,
        "wires": [
            [
                "fba95da9.01039",
                "9a258862.4aff98"
            ]
        ]
    },
    {
        "id": "ea67f8ca.6e7fc8",
        "type": "http in",
        "z": "4d46ae33.cc774",
        "name": "http PUT /setOPC",
        "url": "/setOPC",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 180,
        "wires": [
            [
                "534e10d9.ea788"
            ]
        ]
    },
    {
        "id": "1c56785e.88d348",
        "type": "inject",
        "z": "4d46ae33.cc774",
        "name": "set Variable value (JSON Inject working variableName)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"messageType\":\"Variable\",\"variableName\":\"3:\\\"DB_OP010A_MES_Interface_1\\\".\\\"MES_MES_TO_PLC_INTERFACE\\\".\\\"Cell_low_IR\\\"\",\"variableValue\":11.8}",
        "payloadType": "json",
        "x": 340,
        "y": 1280,
        "wires": [
            [
                "c1869c10.ec6b6",
                "37904cfc.30dc04"
            ]
        ]
    },
    {
        "id": "c9bded12.793d6",
        "type": "inject",
        "z": "4d46ae33.cc774",
        "name": "set Variable value (JSON Inject working variableName)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"messageType\":\"Variable\",\"variableName\":\"3:\\\"DB_OP010A_MES_Interface_1\\\".\\\"MES_MES_TO_PLC_INTERFACE\\\".\\\"PartType\\\"\",\"variableValue\":\"stracazz\"}",
        "payloadType": "json",
        "x": 340,
        "y": 1320,
        "wires": [
            [
                "c1869c10.ec6b6",
                "37904cfc.30dc04"
            ]
        ]
    },
    {
        "id": "2d99ebec.1ae264",
        "type": "inject",
        "z": "4d46ae33.cc774",
        "name": "set Variable value (JSON Inject working variableName)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"messageType\":\"Variable\",\"variableName\":\"3:\\\"DB_OP010A_MES_Interface_1\\\".\\\"MES_MES_TO_PLC_INTERFACE\\\".\\\"Initial_order_quantity\\\"\",\"variableValue\":22}",
        "payloadType": "json",
        "x": 340,
        "y": 1360,
        "wires": [
            [
                "c1869c10.ec6b6",
                "37904cfc.30dc04"
            ]
        ]
    },
    {
        "id": "a24c7852.0fb638",
        "type": "function",
        "z": "4d46ae33.cc774",
        "name": "timeout",
        "func": "setTimeout(function(){\n    console.log('timeout');\n    node.send({payload:'timeout'});\n    node.done\n    },3000)\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1720,
        "wires": [
            [
                "ca90f3c5.a219d"
            ]
        ]
    },
    {
        "id": "82f11043.78478",
        "type": "inject",
        "z": "4d46ae33.cc774",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1720,
        "wires": [
            [
                "a24c7852.0fb638"
            ]
        ]
    },
    {
        "id": "ca90f3c5.a219d",
        "type": "debug",
        "z": "4d46ae33.cc774",
        "name": "timeout",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 1720,
        "wires": []
    },
    {
        "id": "82822d7e.7c74a",
        "type": "link out",
        "z": "4d46ae33.cc774",
        "name": "OPC Client Read output",
        "links": [
            "97d5dc10.47685",
            "c2024573.cc3d68"
        ],
        "x": 665,
        "y": 720,
        "wires": []
    },
    {
        "id": "3759993e.b22ed6",
        "type": "link out",
        "z": "4d46ae33.cc774",
        "name": "OPC Client Write output",
        "links": [
            "fe61e9fd.998e58"
        ],
        "x": 675,
        "y": 860,
        "wires": []
    },
    {
        "id": "a570608b.cf748",
        "type": "debug",
        "z": "4d46ae33.cc774",
        "name": "Client WRITE OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 860,
        "wires": []
    },
    {
        "id": "9a258862.4aff98",
        "type": "debug",
        "z": "4d46ae33.cc774",
        "name": "Client READ IN",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 720,
        "wires": []
    },
    {
        "id": "74d8058d.dedf6c",
        "type": "inject",
        "z": "4d46ae33.cc774",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "534e10d9.ea788"
            ]
        ]
    },
    {
        "id": "872981e1.978c1",
        "type": "OpcUa-Server",
        "z": "4d46ae33.cc774",
        "port": "4840",
        "name": "",
        "endpoint": "UA/NoderedServer",
        "users": "users.json",
        "nodeset": "",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": false,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": true,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": 0,
        "maxNodesPerHistoryReadData": 0,
        "maxNodesPerHistoryReadEvents": 0,
        "maxNodesPerHistoryUpdateData": 0,
        "maxNodesPerRead": 0,
        "maxNodesPerWrite": 0,
        "maxNodesPerMethodCall": 0,
        "maxNodesPerRegisterNodes": 0,
        "maxNodesPerNodeManagement": 0,
        "maxMonitoredItemsPerCall": 0,
        "maxNodesPerHistoryUpdateEvents": 0,
        "maxNodesPerTranslateBrowsePathsToNodeIds": 0,
        "x": 370,
        "y": 300,
        "wires": [
            [
                "b2036564.90bbb8",
                "db17a823.344468"
            ]
        ]
    },
    {
        "id": "cfdd4781.e43068",
        "type": "websocket in",
        "z": "dcc7185c.306288",
        "name": "ws receive",
        "server": "4dbac78b.892958",
        "client": "",
        "x": 170,
        "y": 160,
        "wires": [
            [
                "84581b82.d5bb68",
                "6218bf0a.a167b",
                "88d8f709.4b4c88"
            ]
        ]
    },
    {
        "id": "e11e5467.20ad58",
        "type": "websocket out",
        "z": "dcc7185c.306288",
        "name": "ws publish",
        "server": "d85be333.4917e",
        "client": "",
        "x": 660,
        "y": 160,
        "wires": []
    },
    {
        "id": "84581b82.d5bb68",
        "type": "debug",
        "z": "dcc7185c.306288",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 120,
        "wires": []
    },
    {
        "id": "6218bf0a.a167b",
        "type": "function",
        "z": "dcc7185c.306288",
        "name": "return payload",
        "func": "msg._session=\"\"\nif(msg.payload=='test'){\n    for(i=0;i<10;i++){\n        \n        msg.payload=i+\" ms:\"+Date.now()\n        node.send(msg)\n    }\n    node.done()\n}else if(msg.payload==''){\n    return {payload: 'EMPTY STRING !!!'}\n}\nelse{\n    return {payload: msg.payload}\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 160,
        "wires": [
            [
                "e11e5467.20ad58",
                "9356f28a.58b78"
            ]
        ]
    },
    {
        "id": "f5876f16.12f63",
        "type": "http in",
        "z": "dcc7185c.306288",
        "name": "",
        "url": "/access-url",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 260,
        "wires": [
            [
                "ad86fd23.b12f"
            ]
        ]
    },
    {
        "id": "ad86fd23.b12f",
        "type": "template",
        "z": "dcc7185c.306288",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html>\n    <head>\n        <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css&quot;>\n        //<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js&quot;&gt;&lt;/script>\n        <script src=\"https://code.jquery.com/jquery-3.6.0.slim.min.js\" integrity=\"sha256-u7e5khyithlIdTpu22PHhENmPcRdFiHRjhAuHcs05RI=\" crossorigin=\"anonymous\"></script>\n\n        <script  type=\"text/javascript\">\n             var url = \"192.168.56.2:1880\"\n             var incomingUrl = `ws://${url}/ws/receiveMessage`\n             var outgoingUrl = `ws://${url}/ws/publishMessage`\n             console.log(outgoingUrl)\n             var socket1 = new WebSocket(incomingUrl);\n             var socket2 = new WebSocket(outgoingUrl);\n            \n             socket2.onopen = function() {\n               console.log(\"client connected\")\n               var message = {\n                 'cmd': 'Client connected'\n               };\n               socket1.send(JSON.stringify(message));\n             };\n            \n             socket2.onclose = function(){\n               console.log('Connection closed');\n             };\n            \n             socket2.onerror = function(error) {\n               console.log('Error detected: ' + error);\n             };\n            \n             socket2.onmessage = function(e) {\n                //console.log(e.data)\n                //console.log(JSON.parse(e.data))\n                var server_message = e.data;\n                document.getElementById('message_receive').innerHTML += `<p>${server_message}</p>`\n                //alert(server_message)\n             }\n            /*\n             var sendMessage = function() {\n               let message = document.getElementById('message_send')\n               let messageRaw = message.textContent\n               console.log(`sending message ${messageRaw}`)\n               socket1.send(messageRaw);\n             }\n            */\n            function sendMessage(){\n                var msg=$(\"#message_send\").val();\n                console.log(\"sending message: \"+msg);\n                socket1.send(msg)\n            }\n            $(document).ready(function(){\n\n                $(\"button\").on('click',function(){sendMessage()})\n            })\n         </script>\n     </head>\n     <body>\n       <h3>Send Message</h3>\n       <input type=\"text\" id=\"message_send\" >\n       <button type=\"button\">Send</button>\n       <h3>Received Message</h3>\n       <div id=\"message_receive\"></div>\n     </body>\n</html>     ",
        "output": "str",
        "x": 390,
        "y": 260,
        "wires": [
            [
                "12b59343.d0848d"
            ]
        ]
    },
    {
        "id": "12b59343.d0848d",
        "type": "http response",
        "z": "dcc7185c.306288",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 600,
        "y": 260,
        "wires": []
    },
    {
        "id": "9356f28a.58b78",
        "type": "debug",
        "z": "dcc7185c.306288",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 120,
        "wires": []
    },
    {
        "id": "67c16047.a7923",
        "type": "link in",
        "z": "dcc7185c.306288",
        "name": "WS Publish",
        "links": [
            "2149a1a1.0b454e",
            "4a13e323.2ccd4c",
            "8c74883d.161948"
        ],
        "x": 535,
        "y": 200,
        "wires": [
            [
                "e11e5467.20ad58",
                "8b03773d.bb1788"
            ]
        ]
    },
    {
        "id": "3ea3da9a.f4a136",
        "type": "inject",
        "z": "dcc7185c.306288",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 360,
        "wires": [
            [
                "2149a1a1.0b454e"
            ]
        ]
    },
    {
        "id": "2149a1a1.0b454e",
        "type": "link out",
        "z": "dcc7185c.306288",
        "name": "",
        "links": [
            "67c16047.a7923"
        ],
        "x": 255,
        "y": 360,
        "wires": []
    },
    {
        "id": "d77f8208.cd093",
        "type": "change",
        "z": "dcc7185c.306288",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ts",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 130,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "88d8f709.4b4c88",
        "type": "link out",
        "z": "dcc7185c.306288",
        "name": "WS Received",
        "links": [
            "d561663a.4cef28"
        ],
        "x": 275,
        "y": 200,
        "wires": []
    },
    {
        "id": "8b03773d.bb1788",
        "type": "debug",
        "z": "dcc7185c.306288",
        "name": "WS Publish",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 220,
        "wires": []
    },
    {
        "id": "69d58b91.b00154",
        "type": "comment",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "info": "# 1\tPALLET_IN_POS is false\n# 2\tthere is an open transit\n\n",
        "x": 80,
        "y": 20,
        "wires": []
    },
    {
        "id": "5b0d1eb0.0c742",
        "type": "comment",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "info": "# 1\ttransit will be closed\t\t\n# 2\tif this flow is executed on the last station\tif products are good\tProductOrder uS is notified about the completed product\n# 3\tIf there are available products\tentities are updated on DB\t\n# 4\tall previous flows acks are reset\tALLOW_STATION_START\t\n# TYPE_INCONSISTENT\t\n# RELEASE_OK_PLT\t\n# RELEASE_NOK_PLT\t\n\n\n",
        "x": 80,
        "y": 1020,
        "wires": []
    },
    {
        "id": "4a13e323.2ccd4c",
        "type": "link out",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "67c16047.a7923"
        ],
        "x": 1235,
        "y": 60,
        "wires": []
    },
    {
        "id": "be78d830.276408",
        "type": "debug",
        "z": "b6a3f7dd.4c1438",
        "name": "Action Message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 20,
        "wires": []
    },
    {
        "id": "dcc6d84b.3c07b8",
        "type": "function",
        "z": "b6a3f7dd.4c1438",
        "name": "Action Collector",
        "func": "if(flow.get('actions')){\n    console.log('flow actions exists')\n}else{\n    console.log('flow actions not exists')\n    flow.set('actions',[])\n}\n\nvar actions=flow.get('actions')\n\nif(msg.hasOwnProperty('req')){\n    //console.log(msg.req)\n    var url=msg.req.url\n    console.log(\"http req:\\'\"+url+\"\\'\")\n    switch(url){\n        case \"/actions\":\n\n            console.log(actions)\n            msg.payload = actions\n            break\n        default:\n            msg.payload = 'no response associated with '+url\n    }\n    return msg\n}else {\n    \n    //flow.actions.push(msg.topic)\n    //flow.actions.push(msg.payload)\n    actions.push(msg)\n    //console.log(actions)\n    //return msg;\n    console.log(\"msg:\")\n    console.log(JSON.stringify(msg))\n    var msg1=msg\n    console.log(\"topic of type: \"+typeof msg.topic)\n    console.log(\"payload of type: \"+typeof msg.payload)\n    if(typeof msg.payload == 'object' && typeof msg.topic != 'undefined'){\n        \n        //console.log(\"object payload\")   \n        msg1.payload=msg.topic+\" \"+JSON.stringify(msg.payload)\n        \n    }else if(typeof msg.topic != 'undefined'){\n        \n        //console.log(\"object payload\")   \n        msg1.payload=msg.topic+\" \"+msg.payload\n        \n    }else if(typeof msg.topic == 'undefined'){\n        \n        //console.log(\"undefined topic\")\n        msg1.payload=msg.payload\n        \n    }else if(typeof msg.payload == 'undefined'){\n        \n        //console.log(\"undefined payload\") \n        msg1.payload=\"READ \"+msg.topic\n        \n    }\n    //console.log(JSON.stringify(msg1))\n    /*\n    if(msg.topic){\n        var msg1={payload:\"\"}\n        msg1.payload=msg.topic\n        node.send(msg1)\n    }\n    */\n    //node.send(msg)\n    //node.done\n    flow.set('actions',actions)\n    return msg1\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 60,
        "wires": [
            [
                "4a13e323.2ccd4c",
                "8ce0b56d.798148"
            ]
        ]
    },
    {
        "id": "6aacc1af.d1113",
        "type": "link in",
        "z": "b6a3f7dd.4c1438",
        "name": "Actions Collector",
        "links": [
            "a76054f0.dfb298",
            "59d58511.bcfc7c",
            "83904d59.728fa",
            "4105f6de.69e358",
            "5943caa2.699364",
            "ac935433.d10908",
            "e99260f3.60cc",
            "a7345279.4bcfe",
            "473485f2.6f899c",
            "96c77464.e5b468",
            "39b9ca20.af0906",
            "e6e4edec.bc844",
            "6c1f6e4c.aec01",
            "d1addd22.f4d93",
            "891e181.9acdae8",
            "804e1123.e3d09",
            "20c22d51.1a7142",
            "a8174a7b.e92438",
            "d6df2397.d4cfb"
        ],
        "x": 975,
        "y": 60,
        "wires": [
            [
                "dcc6d84b.3c07b8",
                "be78d830.276408"
            ]
        ]
    },
    {
        "id": "8ddaa477.162998",
        "type": "select-variables",
        "z": "b6a3f7dd.4c1438",
        "select": "1",
        "select2": "2",
        "editableList": {
            "db": "\"DB_OP010A_MES_Interface_1\"",
            "struct": "\"MES_MES_TO_PLC_INTERFACE\"",
            "rules": {
                "\"TransType\"": {
                    "action": "READ",
                    "type": "Boolean",
                    "value": "false"
                }
            }
        },
        "typedInputJSON": "{\"\\\"TransType\\\"\":{\"action\":\"READ\",\"type\":\"Boolean\",\"value\":\"false\"}}",
        "orderedList": [],
        "x": 200,
        "y": 1240,
        "wires": [
            [
                "96c77464.e5b468",
                "98856010.0be62",
                "df4bf298.d99f2",
                "819b586f.15dc88"
            ],
            [
                "4e819437.11ec7c",
                "819b586f.15dc88"
            ],
            [],
            []
        ]
    },
    {
        "id": "87397e8e.6510d",
        "type": "select-variables",
        "z": "b6a3f7dd.4c1438",
        "select": "1",
        "select2": "3",
        "editableList": {
            "db": "\"DB_OP010A_MES_Interface_1\"",
            "struct": "\"MES_PLC_TO_MES_INTERFACE\"",
            "rules": {
                "\"TransType\"": {
                    "action": "READ",
                    "type": "Boolean",
                    "value": "true"
                }
            }
        },
        "typedInputJSON": "{\"\\\"TransType\\\"\":{\"action\":\"READ\",\"type\":\"Boolean\",\"value\":\"true\"}}",
        "orderedList": [],
        "x": 200,
        "y": 580,
        "wires": [
            [
                "5164b6cf.122228",
                "83904d59.728fa",
                "74b3bc3f.c0ef44",
                "be631ba1.b19848"
            ],
            [
                "20da2f69.6772d",
                "74b3bc3f.c0ef44"
            ],
            [],
            []
        ]
    },
    {
        "id": "402c6434.78288c",
        "type": "inject",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 660,
        "wires": [
            [
                "87397e8e.6510d"
            ]
        ]
    },
    {
        "id": "83b78e60.fdf4b",
        "type": "select-variables",
        "z": "b6a3f7dd.4c1438",
        "select": "1",
        "select2": "3",
        "editableList": {
            "db": "\"DB_OP010A_MES_Interface_1\"",
            "struct": "\"MES_PLC_TO_MES_INTERFACE\"",
            "rules": {
                "\"TransType\"": {
                    "action": "WRITE",
                    "type": "Boolean",
                    "value": "true"
                }
            }
        },
        "typedInputJSON": "{\"\\\"TransType\\\"\":{\"action\":\"WRITE\",\"type\":\"Boolean\",\"value\":\"true\"}}",
        "orderedList": [],
        "x": 220,
        "y": 340,
        "wires": [
            [
                "ee8a3ab1.c9a818",
                "59d58511.bcfc7c",
                "87397e8e.6510d"
            ],
            [],
            [
                "9aee8622.121308"
            ],
            []
        ]
    },
    {
        "id": "83904d59.728fa",
        "type": "link out",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "6aacc1af.d1113"
        ],
        "x": 515,
        "y": 560,
        "wires": []
    },
    {
        "id": "5164b6cf.122228",
        "type": "debug",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 500,
        "wires": []
    },
    {
        "id": "caafdc65.d24ce",
        "type": "select-variables",
        "z": "b6a3f7dd.4c1438",
        "select": "1",
        "select2": "3",
        "editableList": {
            "db": "\"DB_OP010A_MES_Interface_1\"",
            "struct": "\"MES_PLC_TO_MES_INTERFACE\"",
            "rules": {
                "\"PalletInPos\"": {
                    "action": "WRITE",
                    "type": "Boolean",
                    "value": "false"
                }
            }
        },
        "typedInputJSON": "{\"\\\"PalletInPos\\\"\":{\"action\":\"WRITE\",\"type\":\"Boolean\",\"value\":\"false\"}}",
        "orderedList": [],
        "x": 220,
        "y": 200,
        "wires": [
            [
                "a76054f0.dfb298",
                "ae8c8f4e.ba722",
                "83b78e60.fdf4b"
            ],
            [],
            [
                "ed19ac19.e7311"
            ],
            []
        ]
    },
    {
        "id": "59d58511.bcfc7c",
        "type": "link out",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "6aacc1af.d1113"
        ],
        "x": 535,
        "y": 320,
        "wires": []
    },
    {
        "id": "ee8a3ab1.c9a818",
        "type": "debug",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 280,
        "wires": []
    },
    {
        "id": "efd04a8e.26d848",
        "type": "OpcUa-Client",
        "z": "b6a3f7dd.4c1438",
        "endpoint": "ab20bea.b11ee4",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "name": "OPC Client READ 2",
        "x": 1120,
        "y": 440,
        "wires": [
            [
                "9471447f.3346e8",
                "e99260f3.60cc"
            ]
        ]
    },
    {
        "id": "d561663a.4cef28",
        "type": "link in",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "88d8f709.4b4c88"
        ],
        "x": 135,
        "y": 60,
        "wires": [
            [
                "42851990.1fa478"
            ]
        ]
    },
    {
        "id": "6f12fac8.e7fb34",
        "type": "OpcUa-Client",
        "z": "b6a3f7dd.4c1438",
        "endpoint": "ab20bea.b11ee4",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "name": "OPC Client WRITE 2",
        "x": 1120,
        "y": 300,
        "wires": [
            [
                "f3d1f76.b775808"
            ]
        ]
    },
    {
        "id": "a76054f0.dfb298",
        "type": "link out",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "6aacc1af.d1113"
        ],
        "x": 535,
        "y": 180,
        "wires": []
    },
    {
        "id": "ae8c8f4e.ba722",
        "type": "debug",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 140,
        "wires": []
    },
    {
        "id": "9471447f.3346e8",
        "type": "debug",
        "z": "b6a3f7dd.4c1438",
        "name": "OPC READ RESPONSE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1390,
        "y": 380,
        "wires": []
    },
    {
        "id": "f3d1f76.b775808",
        "type": "debug",
        "z": "b6a3f7dd.4c1438",
        "name": "OPC WRITE RESPONSE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1391,
        "y": 301,
        "wires": []
    },
    {
        "id": "ecc7a469.a0f9f8",
        "type": "function",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "func": "context.data=context.data||{}\nif(context.data.msg1 != null){\n    console.log(\"msg2\")\n    context.data.msg2=msg\n}else{\n    console.log(\"msg1\")\n    context.data.msg1=msg\n}\n\nif(context.data.msg1 != null && context.data.msg2 != null){\n    var payload = [context.data.msg1,context.data.msg2]\n    context.data=null\n    return {payload:payload}\n}else{\n    return msg;    \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 2280,
        "wires": [
            [
                "a789eeda.0a34e"
            ]
        ]
    },
    {
        "id": "52ca543c.12a3cc",
        "type": "inject",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 2280,
        "wires": [
            [
                "ecc7a469.a0f9f8"
            ]
        ]
    },
    {
        "id": "a789eeda.0a34e",
        "type": "debug",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 2280,
        "wires": []
    },
    {
        "id": "624e019b.3f388",
        "type": "debug",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 640,
        "wires": []
    },
    {
        "id": "e99260f3.60cc",
        "type": "link out",
        "z": "b6a3f7dd.4c1438",
        "name": "OPC Client READ 2 msg OUT",
        "links": [
            "6aacc1af.d1113",
            "1b4c651d.85c80b",
            "54961042.479d",
            "7e5ba0b2.0528e",
            "4940cdb1.cd6114",
            "495ddd52.92aec4",
            "823b904.12c0c7"
        ],
        "x": 1295,
        "y": 440,
        "wires": []
    },
    {
        "id": "be631ba1.b19848",
        "type": "select-variables",
        "z": "b6a3f7dd.4c1438",
        "select": "1",
        "select2": "3",
        "editableList": {
            "db": "\"DB_OP010A_MES_Interface_1\"",
            "struct": "\"MES_PLC_TO_MES_INTERFACE\"",
            "rules": {
                "\"PalletInPos\"": {
                    "action": "READ",
                    "type": "Boolean",
                    "value": "false"
                }
            }
        },
        "typedInputJSON": "{\"\\\"PalletInPos\\\"\":{\"action\":\"READ\",\"type\":\"Boolean\",\"value\":\"false\"}}",
        "orderedList": [],
        "x": 200,
        "y": 800,
        "wires": [
            [
                "d71426aa.465308",
                "a7345279.4bcfe",
                "8ddaa477.162998",
                "85eb3485.f15818"
            ],
            [
                "ecbcd517.abb128",
                "85eb3485.f15818"
            ],
            [],
            []
        ]
    },
    {
        "id": "252e866c.ddc11a",
        "type": "inject",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 880,
        "wires": [
            [
                "be631ba1.b19848"
            ]
        ]
    },
    {
        "id": "a7345279.4bcfe",
        "type": "link out",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "6aacc1af.d1113"
        ],
        "x": 515,
        "y": 780,
        "wires": []
    },
    {
        "id": "d71426aa.465308",
        "type": "debug",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 720,
        "wires": []
    },
    {
        "id": "12645f0c.ea87d1",
        "type": "debug",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 860,
        "wires": []
    },
    {
        "id": "be00fe4d.a80e3",
        "type": "link in",
        "z": "b6a3f7dd.4c1438",
        "name": "OPC Client WRITE 2 msg IN",
        "links": [
            "ed19ac19.e7311",
            "9aee8622.121308"
        ],
        "x": 975,
        "y": 300,
        "wires": [
            [
                "6f12fac8.e7fb34"
            ]
        ]
    },
    {
        "id": "ed19ac19.e7311",
        "type": "link out",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "be00fe4d.a80e3"
        ],
        "x": 535,
        "y": 220,
        "wires": []
    },
    {
        "id": "9aee8622.121308",
        "type": "link out",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "be00fe4d.a80e3"
        ],
        "x": 535,
        "y": 360,
        "wires": []
    },
    {
        "id": "15edd4ba.6f8b0b",
        "type": "link in",
        "z": "b6a3f7dd.4c1438",
        "name": "OPC Client READ 2 msg IN",
        "links": [
            "20da2f69.6772d",
            "ecbcd517.abb128",
            "4e819437.11ec7c",
            "59f59c8e.1dcc54",
            "a2fe65a0.339628",
            "3579d0eb.de4f5"
        ],
        "x": 975,
        "y": 440,
        "wires": [
            [
                "efd04a8e.26d848"
            ]
        ]
    },
    {
        "id": "20da2f69.6772d",
        "type": "link out",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "15edd4ba.6f8b0b"
        ],
        "x": 515,
        "y": 600,
        "wires": []
    },
    {
        "id": "1b4c651d.85c80b",
        "type": "link in",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "e99260f3.60cc"
        ],
        "x": 515,
        "y": 660,
        "wires": [
            [
                "74b3bc3f.c0ef44"
            ]
        ]
    },
    {
        "id": "473485f2.6f899c",
        "type": "link out",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "6aacc1af.d1113"
        ],
        "x": 835,
        "y": 600,
        "wires": []
    },
    {
        "id": "ecbcd517.abb128",
        "type": "link out",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "15edd4ba.6f8b0b"
        ],
        "x": 515,
        "y": 820,
        "wires": []
    },
    {
        "id": "54961042.479d",
        "type": "link in",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "e99260f3.60cc"
        ],
        "x": 515,
        "y": 880,
        "wires": [
            [
                "85eb3485.f15818"
            ]
        ]
    },
    {
        "id": "df4bf298.d99f2",
        "type": "select-variables",
        "z": "b6a3f7dd.4c1438",
        "select": "1",
        "select2": "2",
        "editableList": {
            "db": "\"DB_OP010A_MES_Interface_1\"",
            "struct": "\"MES_MES_TO_PLC_INTERFACE\"",
            "rules": {
                "\"ReleaseOkPlt\"": {
                    "action": "READ",
                    "type": "Boolean",
                    "value": "false"
                }
            }
        },
        "typedInputJSON": "{\"\\\"ReleaseOkPlt\\\"\":{\"action\":\"READ\",\"type\":\"Boolean\",\"value\":\"false\"}}",
        "orderedList": [],
        "x": 200,
        "y": 1500,
        "wires": [
            [
                "39b9ca20.af0906",
                "81b0cbe0.bca2d8",
                "b6b7432e.1b2db",
                "46f49b7c.33f9d4"
            ],
            [
                "59f59c8e.1dcc54",
                "46f49b7c.33f9d4"
            ],
            [],
            []
        ]
    },
    {
        "id": "b6b7432e.1b2db",
        "type": "select-variables",
        "z": "b6a3f7dd.4c1438",
        "select": "1",
        "select2": "2",
        "editableList": {
            "db": "\"DB_OP010A_MES_Interface_1\"",
            "struct": "\"MES_MES_TO_PLC_INTERFACE\"",
            "rules": {
                "\"ReleaseNokPlt\"": {
                    "action": "READ",
                    "type": "Boolean",
                    "value": "false"
                }
            }
        },
        "typedInputJSON": "{\"\\\"ReleaseNokPlt\\\"\":{\"action\":\"READ\",\"type\":\"Boolean\",\"value\":\"false\"}}",
        "orderedList": [],
        "x": 200,
        "y": 1780,
        "wires": [
            [
                "599863ed.1e904c",
                "e6e4edec.bc844",
                "ad6975c9.e71a08",
                "8ebdfde7.745e"
            ],
            [
                "a2fe65a0.339628",
                "8ebdfde7.745e"
            ],
            [],
            []
        ]
    },
    {
        "id": "ad6975c9.e71a08",
        "type": "select-variables",
        "z": "b6a3f7dd.4c1438",
        "select": "1",
        "select2": "2",
        "editableList": {
            "db": "\"DB_OP010A_MES_Interface_1\"",
            "struct": "\"MES_MES_TO_PLC_INTERFACE\"",
            "rules": {
                "\"AllowStationStart\"": {
                    "action": "READ",
                    "type": "Boolean",
                    "value": "false"
                }
            }
        },
        "typedInputJSON": "{\"\\\"AllowStationStart\\\"\":{\"action\":\"READ\",\"type\":\"Boolean\",\"value\":\"false\"}}",
        "orderedList": [],
        "x": 200,
        "y": 2040,
        "wires": [
            [
                "c2a39d5c.23d74",
                "6c1f6e4c.aec01",
                "2af76bd3.622244"
            ],
            [
                "3579d0eb.de4f5",
                "2af76bd3.622244"
            ],
            [],
            []
        ]
    },
    {
        "id": "96c77464.e5b468",
        "type": "link out",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "6aacc1af.d1113"
        ],
        "x": 515,
        "y": 1220,
        "wires": []
    },
    {
        "id": "98856010.0be62",
        "type": "debug",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 1160,
        "wires": []
    },
    {
        "id": "681be59b.015aec",
        "type": "debug",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 1300,
        "wires": []
    },
    {
        "id": "4e819437.11ec7c",
        "type": "link out",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "15edd4ba.6f8b0b"
        ],
        "x": 515,
        "y": 1260,
        "wires": []
    },
    {
        "id": "7e5ba0b2.0528e",
        "type": "link in",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "e99260f3.60cc"
        ],
        "x": 515,
        "y": 1320,
        "wires": [
            [
                "819b586f.15dc88"
            ]
        ]
    },
    {
        "id": "39b9ca20.af0906",
        "type": "link out",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "6aacc1af.d1113"
        ],
        "x": 515,
        "y": 1480,
        "wires": []
    },
    {
        "id": "81b0cbe0.bca2d8",
        "type": "debug",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 1420,
        "wires": []
    },
    {
        "id": "c83e493e.34e858",
        "type": "debug",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 1560,
        "wires": []
    },
    {
        "id": "59f59c8e.1dcc54",
        "type": "link out",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "15edd4ba.6f8b0b"
        ],
        "x": 515,
        "y": 1520,
        "wires": []
    },
    {
        "id": "4940cdb1.cd6114",
        "type": "link in",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "e99260f3.60cc"
        ],
        "x": 515,
        "y": 1580,
        "wires": [
            [
                "46f49b7c.33f9d4"
            ]
        ]
    },
    {
        "id": "e6e4edec.bc844",
        "type": "link out",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "6aacc1af.d1113"
        ],
        "x": 515,
        "y": 1760,
        "wires": []
    },
    {
        "id": "599863ed.1e904c",
        "type": "debug",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 1700,
        "wires": []
    },
    {
        "id": "434dce69.d734c",
        "type": "debug",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 1840,
        "wires": []
    },
    {
        "id": "a2fe65a0.339628",
        "type": "link out",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "15edd4ba.6f8b0b"
        ],
        "x": 515,
        "y": 1800,
        "wires": []
    },
    {
        "id": "495ddd52.92aec4",
        "type": "link in",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "e99260f3.60cc"
        ],
        "x": 515,
        "y": 1860,
        "wires": [
            [
                "8ebdfde7.745e"
            ]
        ]
    },
    {
        "id": "6c1f6e4c.aec01",
        "type": "link out",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "6aacc1af.d1113"
        ],
        "x": 515,
        "y": 2020,
        "wires": []
    },
    {
        "id": "c2a39d5c.23d74",
        "type": "debug",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 1960,
        "wires": []
    },
    {
        "id": "bcd75f72.6a20b",
        "type": "debug",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 2100,
        "wires": []
    },
    {
        "id": "3579d0eb.de4f5",
        "type": "link out",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "15edd4ba.6f8b0b"
        ],
        "x": 515,
        "y": 2060,
        "wires": []
    },
    {
        "id": "823b904.12c0c7",
        "type": "link in",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "e99260f3.60cc"
        ],
        "x": 515,
        "y": 2120,
        "wires": [
            [
                "2af76bd3.622244"
            ]
        ]
    },
    {
        "id": "891e181.9acdae8",
        "type": "link out",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "6aacc1af.d1113"
        ],
        "x": 835,
        "y": 820,
        "wires": []
    },
    {
        "id": "804e1123.e3d09",
        "type": "link out",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "6aacc1af.d1113"
        ],
        "x": 835,
        "y": 1260,
        "wires": []
    },
    {
        "id": "20c22d51.1a7142",
        "type": "link out",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "6aacc1af.d1113"
        ],
        "x": 835,
        "y": 1520,
        "wires": []
    },
    {
        "id": "a8174a7b.e92438",
        "type": "link out",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "6aacc1af.d1113"
        ],
        "x": 835,
        "y": 1800,
        "wires": []
    },
    {
        "id": "d6df2397.d4cfb",
        "type": "link out",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "links": [
            "6aacc1af.d1113"
        ],
        "x": 835,
        "y": 2060,
        "wires": []
    },
    {
        "id": "4a3797b9.5e1a48",
        "type": "function",
        "z": "b6a3f7dd.4c1438",
        "name": "Check READ Value ",
        "func": "context.data=context.data||{}\nif(!msg.hasOwnProperty('payload')){\n    console.log(\"msg1:\")\n    console.log(msg)\n    context.data.msg1=msg\n}\nif(msg.hasOwnProperty('payload')){\n    console.log(\"msg2:\")\n    console.log(msg)\n    context.data.msg2=msg\n}\n\nif(context.data.msg1 != null && context.data.msg2 != null){\n    var payload = [context.data.msg1,context.data.msg2]\n    context.data=null\n    return {payload:payload}\n}else{\n    return msg;    \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 660,
        "wires": [
            [
                "f7a37d96.dee53"
            ]
        ]
    },
    {
        "id": "309bf4f.7c19f0c",
        "type": "inject",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "mazz",
        "x": 1310,
        "y": 660,
        "wires": [
            [
                "4a3797b9.5e1a48"
            ]
        ]
    },
    {
        "id": "f7a37d96.dee53",
        "type": "debug",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1660,
        "y": 660,
        "wires": []
    },
    {
        "id": "c4f6f878.8e1998",
        "type": "inject",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "mazz",
        "payload": "azz",
        "payloadType": "str",
        "x": 1320,
        "y": 700,
        "wires": [
            [
                "4a3797b9.5e1a48"
            ]
        ]
    },
    {
        "id": "74b3bc3f.c0ef44",
        "type": "function",
        "z": "b6a3f7dd.4c1438",
        "name": "Check READ Value ",
        "func": "context.data=context.data||{}\nif(msg.hasOwnProperty('payload') && !msg.hasOwnProperty('topic')){\n    console.log(\"msg0:\")\n    console.log(msg)\n    context.data.msg0=msg.payload[0].READ\n}else if(!msg.hasOwnProperty('payload') && msg.hasOwnProperty('topic')){\n    console.log(\"msg1:\")\n    console.log(msg)\n    context.data.msg1=msg\n}else if(msg.hasOwnProperty('payload') && msg.hasOwnProperty('topic') && context.data.hasOwnProperty('msg1')){\n    if(msg.topic==context.data.msg1.topic){\n        console.log(\"msg2:\")\n        console.log(msg)\n        context.data.msg2=msg \n    }\n}\n\nif(context.data.msg0 != null && context.data.msg1 != null && context.data.msg2 != null){\n    var result=\"FAILED\"\n    if(context.data.msg0.payload == context.data.msg2.payload){\n        result=\"PASSED\"\n    }\n    var response={CHECK : result}\n//    var payload = [context.data.msg0,context.data.msg1,context.data.msg2,response]\n    var payload = {READ:context.data.msg0,REQ:context.data.msg1,RES:context.data.msg2,response}\n    context.data=null\n    return {payload:payload}\n}//else{\n//    return msg;    \n//}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 640,
        "wires": [
            [
                "624e019b.3f388",
                "473485f2.6f899c",
                "f11416f2.b27058"
            ]
        ]
    },
    {
        "id": "85eb3485.f15818",
        "type": "function",
        "z": "b6a3f7dd.4c1438",
        "name": "Check READ Value ",
        "func": "context.data=context.data||{}\nif(msg.hasOwnProperty('payload') && !msg.hasOwnProperty('topic')){\n    console.log(\"msg0:\")\n    console.log(msg)\n    context.data.msg0=msg.payload[0].READ\n}else if(!msg.hasOwnProperty('payload') && msg.hasOwnProperty('topic')){\n    console.log(\"msg1:\")\n    console.log(msg)\n    context.data.msg1=msg\n}else if(msg.hasOwnProperty('payload') && msg.hasOwnProperty('topic') && context.data.hasOwnProperty('msg1')){\n    if(msg.topic==context.data.msg1.topic){\n        console.log(\"msg2:\")\n        console.log(msg)\n        context.data.msg2=msg \n    }\n}\n\nif(context.data.msg0 != null && context.data.msg1 != null && context.data.msg2 != null){\n    var result=\"FAILED\"\n    if(context.data.msg0.payload == context.data.msg2.payload){\n        result=\"PASSED\"\n    }\n    var response={CHECK : result}\n//    var payload = [context.data.msg0,context.data.msg1,context.data.msg2,response]\n    var payload = {READ:context.data.msg0,REQ:context.data.msg1,RES:context.data.msg2,response}\n    context.data=null\n    return {payload:payload}\n}//else{\n//    return msg;    \n//}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 860,
        "wires": [
            [
                "891e181.9acdae8",
                "12645f0c.ea87d1"
            ]
        ]
    },
    {
        "id": "819b586f.15dc88",
        "type": "function",
        "z": "b6a3f7dd.4c1438",
        "name": "Check READ Value ",
        "func": "context.data=context.data||{}\nif(msg.hasOwnProperty('payload') && !msg.hasOwnProperty('topic')){\n    console.log(\"msg0:\")\n    console.log(msg)\n    context.data.msg0=msg.payload[0].READ\n}else if(!msg.hasOwnProperty('payload') && msg.hasOwnProperty('topic')){\n    console.log(\"msg1:\")\n    console.log(msg)\n    context.data.msg1=msg\n}else if(msg.hasOwnProperty('payload') && msg.hasOwnProperty('topic') && context.data.hasOwnProperty('msg1')){\n    if(msg.topic==context.data.msg1.topic){\n        console.log(\"msg2:\")\n        console.log(msg)\n        context.data.msg2=msg \n    }\n}\n\nif(context.data.msg0 != null && context.data.msg1 != null && context.data.msg2 != null){\n    var result=\"FAILED\"\n    if(context.data.msg0.payload == context.data.msg2.payload){\n        result=\"PASSED\"\n    }\n    var response={CHECK : result}\n//    var payload = [context.data.msg0,context.data.msg1,context.data.msg2,response]\n    var payload = {READ:context.data.msg0,REQ:context.data.msg1,RES:context.data.msg2,response}\n    context.data=null\n    return {payload:payload}\n}//else{\n//    return msg;    \n//}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1300,
        "wires": [
            [
                "681be59b.015aec",
                "804e1123.e3d09"
            ]
        ]
    },
    {
        "id": "46f49b7c.33f9d4",
        "type": "function",
        "z": "b6a3f7dd.4c1438",
        "name": "Check READ Value ",
        "func": "context.data=context.data||{}\nif(msg.hasOwnProperty('payload') && !msg.hasOwnProperty('topic')){\n    console.log(\"msg0:\")\n    console.log(msg)\n    context.data.msg0=msg.payload[0].READ\n}else if(!msg.hasOwnProperty('payload') && msg.hasOwnProperty('topic')){\n    console.log(\"msg1:\")\n    console.log(msg)\n    context.data.msg1=msg\n}else if(msg.hasOwnProperty('payload') && msg.hasOwnProperty('topic') && context.data.hasOwnProperty('msg1')){\n    if(msg.topic==context.data.msg1.topic){\n        console.log(\"msg2:\")\n        console.log(msg)\n        context.data.msg2=msg \n    }\n}\n\nif(context.data.msg0 != null && context.data.msg1 != null && context.data.msg2 != null){\n    var result=\"FAILED\"\n    if(context.data.msg0.payload == context.data.msg2.payload){\n        result=\"PASSED\"\n    }\n    var response={CHECK : result}\n//    var payload = [context.data.msg0,context.data.msg1,context.data.msg2,response]\n    var payload = {READ:context.data.msg0,REQ:context.data.msg1,RES:context.data.msg2,response}\n    context.data=null\n    return {payload:payload}\n}//else{\n//    return msg;    \n//}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1560,
        "wires": [
            [
                "c83e493e.34e858",
                "20c22d51.1a7142"
            ]
        ]
    },
    {
        "id": "8ebdfde7.745e",
        "type": "function",
        "z": "b6a3f7dd.4c1438",
        "name": "Check READ Value ",
        "func": "context.data=context.data||{}\nif(msg.hasOwnProperty('payload') && !msg.hasOwnProperty('topic')){\n    console.log(\"msg0:\")\n    console.log(msg)\n    context.data.msg0=msg.payload[0].READ\n}else if(!msg.hasOwnProperty('payload') && msg.hasOwnProperty('topic')){\n    console.log(\"msg1:\")\n    console.log(msg)\n    context.data.msg1=msg\n}else if(msg.hasOwnProperty('payload') && msg.hasOwnProperty('topic') && context.data.hasOwnProperty('msg1')){\n    if(msg.topic==context.data.msg1.topic){\n        console.log(\"msg2:\")\n        console.log(msg)\n        context.data.msg2=msg \n    }\n}\n\nif(context.data.msg0 != null && context.data.msg1 != null && context.data.msg2 != null){\n    var result=\"FAILED\"\n    if(context.data.msg0.payload == context.data.msg2.payload){\n        result=\"PASSED\"\n    }\n    var response={CHECK : result}\n//    var payload = [context.data.msg0,context.data.msg1,context.data.msg2,response]\n    var payload = {READ:context.data.msg0,REQ:context.data.msg1,RES:context.data.msg2,response}\n    context.data=null\n    return {payload:payload}\n}//else{\n//    return msg;    \n//}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1840,
        "wires": [
            [
                "434dce69.d734c",
                "a8174a7b.e92438"
            ]
        ]
    },
    {
        "id": "2af76bd3.622244",
        "type": "function",
        "z": "b6a3f7dd.4c1438",
        "name": "Check READ Value ",
        "func": "context.data=context.data||{}\nif(msg.hasOwnProperty('payload') && !msg.hasOwnProperty('topic')){\n    console.log(\"msg0:\")\n    console.log(msg)\n    context.data.msg0=msg.payload[0].READ\n}else if(!msg.hasOwnProperty('payload') && msg.hasOwnProperty('topic')){\n    console.log(\"msg1:\")\n    console.log(msg)\n    context.data.msg1=msg\n}else if(msg.hasOwnProperty('payload') && msg.hasOwnProperty('topic') && context.data.hasOwnProperty('msg1')){\n    if(msg.topic==context.data.msg1.topic){\n        console.log(\"msg2:\")\n        console.log(msg)\n        context.data.msg2=msg \n    }\n}\n\nif(context.data.msg0 != null && context.data.msg1 != null && context.data.msg2 != null){\n    var result=\"FAILED\"\n    if(context.data.msg0.payload == context.data.msg2.payload){\n        result=\"PASSED\"\n    }\n    var response={CHECK : result}\n//    var payload = [context.data.msg0,context.data.msg1,context.data.msg2,response]\n    var payload = {READ:context.data.msg0,REQ:context.data.msg1,RES:context.data.msg2,response}\n    context.data=null\n    return {payload:payload}\n}//else{\n//    return msg;    \n//}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 2100,
        "wires": [
            [
                "bcd75f72.6a20b",
                "d6df2397.d4cfb"
            ]
        ]
    },
    {
        "id": "42851990.1fa478",
        "type": "switch",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PalletIn",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 130,
        "y": 100,
        "wires": [
            [
                "caafdc65.d24ce",
                "b4e93ddd.90267"
            ]
        ]
    },
    {
        "id": "da82cb0.26bd738",
        "type": "function",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "func": "msg.payload=flow.get('actions')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 2480,
        "wires": [
            [
                "98155a59.662398"
            ]
        ]
    },
    {
        "id": "8973728e.a09fb",
        "type": "inject",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 2480,
        "wires": [
            [
                "da82cb0.26bd738"
            ]
        ]
    },
    {
        "id": "98155a59.662398",
        "type": "debug",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 2480,
        "wires": []
    },
    {
        "id": "3f5d356b.2b87fa",
        "type": "http in",
        "z": "b6a3f7dd.4c1438",
        "name": "GET /actions",
        "url": "/actions",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 940,
        "y": 120,
        "wires": [
            [
                "cc0fe939.fd6958",
                "dcc6d84b.3c07b8"
            ]
        ]
    },
    {
        "id": "8c0b3ad1.429bf8",
        "type": "http response",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1430,
        "y": 120,
        "wires": []
    },
    {
        "id": "cc0fe939.fd6958",
        "type": "debug",
        "z": "b6a3f7dd.4c1438",
        "name": "http request",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 160,
        "wires": []
    },
    {
        "id": "b4e93ddd.90267",
        "type": "change",
        "z": "b6a3f7dd.4c1438",
        "name": "reset actions array",
        "rules": [
            {
                "t": "set",
                "p": "actions",
                "pt": "flow",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "8bdd6210.8f766",
        "type": "inject",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 40,
        "wires": [
            [
                "b4e93ddd.90267"
            ]
        ]
    },
    {
        "id": "1cd41953.7c04e7",
        "type": "inject",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "actions",
        "payload": "actions",
        "payloadType": "flow",
        "x": 970,
        "y": 240,
        "wires": [
            [
                "ddc23028.8819d"
            ]
        ]
    },
    {
        "id": "ddc23028.8819d",
        "type": "debug",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 240,
        "wires": []
    },
    {
        "id": "d7d325d7.569608",
        "type": "inject",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 2140,
        "wires": [
            [
                "ad6975c9.e71a08"
            ]
        ]
    },
    {
        "id": "8ce0b56d.798148",
        "type": "switch",
        "z": "b6a3f7dd.4c1438",
        "name": "check if http response",
        "property": "res",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1260,
        "y": 120,
        "wires": [
            [
                "8c0b3ad1.429bf8"
            ]
        ]
    },
    {
        "id": "f11416f2.b27058",
        "type": "function",
        "z": "b6a3f7dd.4c1438",
        "name": "Retrigger On Failed",
        "func": "context.responses=context.responses||[]\ncontext.i=context.i||0\n\nif(msg.payload.hasOwnProperty('response')){\n    var response=msg.payload.response\n    console.log('CHECK RESPONSE')\n    console.log(response)\n    context.responses[context.i]=response\n    context.i++\n    console.log(context.responses)\n    //return msg.payload.response;\n    node.send(msg.payload.response)\n    if(msg.payload.response.CHECK == 'FAILED'){\n        if(context.i<5){\n            setTimeout(()=>{\n                msg.payload.retry={retry:context.i}\n                node.send(msg.payload)\n            },5000)\n        }else if(context.i==5) context.i=0\n    }else{\n        context.i=0\n    }\n}\n\n  \n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 500,
        "wires": [
            [
                "cf9651f6.746f9",
                "e4ba72bd.ef48c"
            ]
        ]
    },
    {
        "id": "cf9651f6.746f9",
        "type": "debug",
        "z": "b6a3f7dd.4c1438",
        "name": "RETRIGGER OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 680,
        "wires": []
    },
    {
        "id": "e4ba72bd.ef48c",
        "type": "switch",
        "z": "b6a3f7dd.4c1438",
        "name": "",
        "property": "retry",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 830,
        "y": 500,
        "wires": [
            [
                "27f17f8f.7c043",
                "87397e8e.6510d"
            ]
        ]
    },
    {
        "id": "27f17f8f.7c043",
        "type": "debug",
        "z": "b6a3f7dd.4c1438",
        "name": "RETRY OUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 540,
        "wires": []
    },
    {
        "id": "8e91152f.6a8548",
        "type": "inject",
        "z": "70830d1f.3a8654",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 120,
        "wires": [
            [
                "b8968c8d.51409"
            ]
        ]
    },
    {
        "id": "b8968c8d.51409",
        "type": "debug",
        "z": "70830d1f.3a8654",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 120,
        "wires": []
    }
]